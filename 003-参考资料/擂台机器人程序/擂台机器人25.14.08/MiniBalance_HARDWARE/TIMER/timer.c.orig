#include "timer.h"
/**************************************************************************
作者：平衡小车之家
我的淘宝小店：http://shop114407458.taobao.com/
**************************************************************************/
/**************************************************************************
函数功能：定时器3通道3输入捕获初始化
入口参数：入口参数：arr：自动重装值  psc：时钟预分频数
返回  值：无
**************************************************************************/
void TIM3_Config(void)
{
    TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
    NVIC_InitTypeDef        NVIC_InitStructure;

    RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);

    TIM_TimeBaseStructure.TIM_Prescaler = 72-1; 			  //时钟预分频
    TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  //向上计数
    TIM_TimeBaseStructure.TIM_Period = 50000-1;			        //自动重装值
    TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;	    //时钟分频1
    TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;
    TIM_TimeBaseInit(TIM3,&TIM_TimeBaseStructure);
    TIM_ClearFlag(TIM3,TIM_FLAG_Update);
    TIM_ITConfig(TIM3,TIM_IT_Update,ENABLE);

    NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;   //抢占优先级2
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;  	    //响应优先级1
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    NVIC_Init(&NVIC_InitStructure);
    TIM_Cmd(TIM3,ENABLE);
}

/**************************************************************************
函数功能：定时器3，ad采集中断服务程序
入口参数：无
返回  值：无
**************************************************************************/
void TIM3_IRQHandler(void)
{
    
    u8 data[10];
    u8 i;
	#define LEFT_EDGE GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_12)
	#define RIGHT_EDGE GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_15)
	#define MID_EDGE GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_3)
    if(TIM_GetITStatus(TIM3,TIM_IT_Update) == SET)
    {
        TIM_ClearITPendingBit(TIM3,TIM_IT_Update);
        volt1=Get_Adc(4);  //电压adc
        volt2=Get_Adc(5);  //LEFT
        volt3=Get_Adc(6);  //MID
        volt4=Get_Adc(7);  //RIGHT
		
		Voltage=volt1*3.3*100/4096;
		
		if(LEFT_EDGE==0|RIGHT_EDGE==0)
		{
			PWML=-2000*1.1;
			PWMR=2000;
			Set_Speed(PWML,PWMR);
			delay_ms(1000);
			
			PWML=4000*1.1;
			PWMR=4000;
			Set_Speed(PWML,PWMR);
			delay_ms(300);
		}
			
		else
		{
			if(MID_EDGE==0)
			{
				PWML=6500*1.1;
				PWMR=6500;
				Set_Speed(PWML,PWMR);			
			}
			else
			{
				
			}
		}
		
		
		
//        data[0]=0xaa;
//        data[1]=volt1>>8;
//        data[2]=volt1;
//        data[3]=volt2>>8;
//        data[4]=volt2;
//        data[5]=volt3>>8;
//        data[6]=volt3;
//        data[7]=volt4>>8;
//        data[8]=volt4;
//        data[9]=0x55;
//        for(i=0; i<10; i++)
//        {
//            USART_SendData(USART2,data[i]);
//            while((USART2->SR&0x40)==0)
//            {
//            }

//        }
    }
}

